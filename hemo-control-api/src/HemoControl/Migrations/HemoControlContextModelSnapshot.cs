// <auto-generated />
using System;
using HemoControl.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HemoControl.Migrations
{
    [DbContext(typeof(HemoControlContext))]
    partial class HemoControlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HemoControl.Entities.Infusion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BleedingLocal")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsBleeding")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHemarthrosis")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsTreatmentContinuation")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("TreatmentLocal")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("UserWeigth")
                        .HasColumnType("decimal(19,5)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Infusions");
                });

            modelBuilder.Entity("HemoControl.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(30) CHARACTER SET utf8mb4")
                        .HasMaxLength(30);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(60) CHARACTER SET utf8mb4")
                        .HasMaxLength(60);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<decimal?>("Weigth")
                        .HasColumnType("decimal(19,5)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HemoControl.Entities.Infusion", b =>
                {
                    b.HasOne("HemoControl.Entities.User", "User")
                        .WithMany("Infusions")
                        .HasForeignKey("UserId");

                    b.OwnsOne("HemoControl.Entities.Factor", "Factor", b1 =>
                        {
                            b1.Property<int>("InfusionId")
                                .HasColumnType("int");

                            b1.Property<string>("Brand")
                                .IsRequired()
                                .HasColumnName("FactorBrand")
                                .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                                .HasMaxLength(50);

                            b1.Property<string>("Lot")
                                .IsRequired()
                                .HasColumnName("FactorLot")
                                .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                                .HasMaxLength(20);

                            b1.Property<int>("Unity")
                                .HasColumnName("FactorUnity")
                                .HasColumnType("int");

                            b1.HasKey("InfusionId");

                            b1.ToTable("Infusions");

                            b1.WithOwner()
                                .HasForeignKey("InfusionId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
